plugins {
  id("java")
  id("org.springframework.boot") version "3.1.5"
  id("io.spring.dependency-management") version "1.1.3"
  id 'com.diffplug.spotless' version '6.7.2'
  id 'jacoco'
  id 'org.jetbrains.gradle.plugin.idea-ext' version '0.10'
}

group = "com.tech.engg5"
version = "0.0.1-SNAPSHOT"

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

sourceSets {
  main {
    java {
      srcDirs = ['src/main/java']
    }
    resources {
      srcDirs = ['src/main/resources']
    }
  }
  test {
    java {
      srcDirs = ['src/test/java']
    }
    resources {
      srcDirs = ['src/test/resources']
    }
  }
}

configurations {
  compile.exclude module: 'spring-boot-starter-tomcat'
  testAnnotationProcessor.extendsFrom annotationProcessor
  testCompileOnly.extendsFrom compileOnly
}

dependencies {
  implementation("org.springframework.boot:spring-boot-starter-actuator:3.1.2")
  implementation("org.springframework.boot:spring-boot-starter-webflux:3.1.2")
  implementation("org.springframework.boot:spring-boot-starter-validation:3.1.2")
  implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive:3.1.2")

  implementation("org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0")
  implementation("org.apache.tomcat.embed:tomcat-embed-core:11.0.0-M9")
  compileOnly('org.projectlombok:lombok:1.18.26')
  testImplementation('org.springframework.boot:spring-boot-starter-test:3.1.0')
  testImplementation("io.projectreactor:reactor-test:3.5.8")
}

test {
  useJUnitPlatform()
  testLogging {
    exceptionFormat = 'full'
    showStackTraces = true
    showExceptions = true
    showCauses = true
  }
  finalizedBy jacocoTestReport
}

compileJava {
  options.encoding = 'UTF-8'
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        minimum = 0.5
      }
    }
    rule {
      enabled = false
      element = 'CLASS'
      includes = ['org.gradle.*']

      limit {
        counter = 'LINE'
        value = 'TOTALCOUNT'
        maximum = 0.3
      }
    }
  }
}